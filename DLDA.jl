function DLDA(ALPHA,BETA)
      A=[-0.0410   -0.0410   -0.0420   -0.0400   -0.0430   -0.0440   -0.0430
         -0.0520   -0.0530   -0.0530   -0.0520   -0.0490   -0.0480   -0.0490
         -0.0530   -0.0530   -0.0520   -0.0510   -0.0480   -0.0480   -0.0470
         -0.0560   -0.0530   -0.0510   -0.0520   -0.0490   -0.0470   -0.0450
         -0.0500   -0.0500   -0.0490   -0.0480   -0.0430   -0.0420   -0.0420
         -0.0560   -0.0510   -0.0490   -0.0480   -0.0420   -0.0410   -0.0370
         -0.0820   -0.0660   -0.0430   -0.0420   -0.0420   -0.0200   -0.0030
         -0.0590   -0.0430   -0.0350   -0.0370   -0.0360   -0.0280   -0.0130
         -0.0420   -0.0380   -0.0260   -0.0310   -0.0250   -0.0130   -0.0100
         -0.0380   -0.0270   -0.0160   -0.0260   -0.0210   -0.0140   -0.0030
         -0.0270   -0.0230   -0.0180   -0.0170   -0.0160   -0.0110   -0.0070
         -0.0170   -0.0160   -0.0140   -0.0120   -0.0110   -0.0100   -0.0080]
      #
      S= 0.2 * ALPHA
      K= floor(S)+3
      if(K <= 1)
         K= 2
      end
      if(K >=  12)
         K=  11
      end
      DA= S - K +3
      L = K + fix( 1.1*sign(DA) )
      #
      S= 0.1 * BETA
      M= floor(S)+4
      if(M <= 1)
         M= 2
      end
      if(M >=  7)
         M=  6
      end
      DB= S - M + 4
      N= M + fix( 1.1*sign(DB) )
      #
      K=convert(Int64, K)
      L=convert(Int64, L)
      M=convert(Int64, M)
      N=convert(Int64, N)
      T= A[K,M]
      U= A[K,N]
      V= T + abs(DA) * (A[L,M] - T)
      W= U + abs(DA) * (A[L,N] - U)
      return dldav = V + (W-V)  * abs(DB)
end
